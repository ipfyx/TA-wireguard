[extract_wireguard_generic]
# base extraction applied to all wireguard:debug log
# cookie.c:230: net_dbg_ratelimited("%s: Could not decrypt invalid cookie response\n",
# device.c:148: net_dbg_ratelimited("%s: Invalid IP packet\n", dev->name);
# device.c:269: pr_debug("%s: Interface destroyed\n", dev->name);
# device.c:382: pr_debug("%s: Interface created\n", dev->name);
# device.c:423: pr_debug("%s: Creating namespace exiting\n", wg->dev->name);
# virtio_net.c:530: net_dbg_ratelimited("%s: too much data\n", skb->dev->name);
# virtio_net.c:1248: pr_debug("%s: short packet %i\n", dev->name, len);
# Mar 16 11:30:15 ipfyx kernel: [59942.137835] wireguard: wg0: .*
REGEX = ^[^\]]+] (?<module>\w+): (?<interface>\w+): (?<wg_data>[^$]+)
FORMAT = action::blocked status::error class::invalid

### device.c ###

[device_invalid_peerip]
# device.c:156: net_dbg_ratelimited("%s: No peer has allowed IPs matching %pI4\n",
# device.c:159: net_dbg_ratelimited("%s: No peer has allowed IPs matching %pI6\n",
# Mar 16 11:30:15 ipfyx kernel: [59942.137835] wireguard: wg0: No peer has allowed IPs matching fe80::10
# May  4 21:59:39 ipfyx kernel: [998237.071551] wireguard: wg0: No peer has allowed IPs matching 127.0.0.1
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>No peer[A-Za-z ]+) (?<src_ip>[^$]+)
FORMAT = action::blocked status::error class::invalid

[device_invalid_endpoint]
# device.c:167: net_dbg_ratelimited("%s: No valid endpoint has been configured or discovered for peer %llu\n",
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>No valid[^0-9]+) (?<peer>[^$]+)
FORMAT = action::blocked status::error class::invalid

### noise.c ###
# These regex could be merged but I can't get splunk to use status::$3 notation

[noise_keypair_created]
# noise.c:846: net_dbg_ratelimited("%s: Keypair %llu created for peer %llu\n",
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Keypair) (?<keypair_number>[0-9]+) (?<msg2>created)[^0-9]+ (?<peer>[0-9]+)
FORMAT = action::allowed status::created class::peer

[noise_keypair_destroyed]
# noise.c:122: net_dbg_ratelimited("%s: Keypair %llu destroyed for peer %llu\n",
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Keypair) (?<keypair_number>[0-9]+) (?<msg2>destroyed)[^0-9]+ (?<peer>[0-9]+)
FORMAT = action::allowed status::destroyed class::peer

### receive.h ###

[receive_cookie]
# receive.c:105: net_dbg_skb_ratelimited("%s: Receiving cookie response from %pISpfsc\n",
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Receiving cookie response from) \[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)
FORMAT = action::allowed status::started class::cookie

[receive_handshake_invalid]
# receive.c:129: net_dbg_skb_ratelimited("%s: Invalid MAC of handshake, dropping packet from %pISpfsc\n",
# receive.c:146: net_dbg_skb_ratelimited("%s: Invalid handshake initiation from %pISpfsc\n",
# receive.c:168: net_dbg_skb_ratelimited("%s: Invalid handshake response from %pISpfsc\n",
# Nov  2 09:14:23 ipfyx kernel: [79082.530374] wireguard: wg0: Invalid handshake initiation from 127.0.0.1:45361
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Invalid[^0-9]+) \[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)
FORMAT = action::blocked status::error class::invalid

[receive_ok]
# receive.c:173: net_dbg_ratelimited("%s: Receiving handshake response from peer %llu (%pISpfsc)\n",
# receive.c:359: net_dbg_ratelimited("%s: Receiving keepalive packet from peer %llu (%pISpfsc)\n",
# receive.c:151: net_dbg_ratelimited("%s: Receiving handshake initiation from peer %llu (%pISpfsc)\n",
# Nov 2 03:40:26 ipfyx kernel: [59046.020839] wireguard: wg0: Receiving handshake response from peer 4 (127.0.0.1:35249)
# Nov 2 03:40:26 ipfyx kernel: [59046.020839] wireguard: wg0: Receiving handshake response from peer 4 ([::1]:59618/0%0)
# Nov 2 03:40:26 ipfyx kernel: [59046.020839] wireguard: wg0: Receiving keepalive packet from peer 4 (127.0.0.1:35249)
# Nov 2 03:40:26 ipfyx kernel: [59046.020839] wireguard: wg0: Receiving keepalive packet from peer 4 ([::1]:59618/0%0)
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Receiving[^0-9]+) (?<peer>[0-9]+) \(\[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)
FORMAT = action::allowed status::started class::handshake

[receive_invalid_src_ip]
# receive.c:416: net_dbg_skb_ratelimited("%s: Packet has unallowed src IP (%pISc) from peer %llu (%pISpfsc)\n",
# Nov 3 10:21:39 ipfyx kernel: [169517.575746] wireguard: wg0: Packet has unallowed src IP (2a02::10) from peer 5 (127.0.0.1:45361)
# Nov 3 10:31:23 ipfyx kernel: [170101.697697] wireguard: wg0: Packet has unallowed src IP (127.0.0.1) from peer 19 ([fe80::1]:49418)
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Packet has unallowed[^(]+) \((?<unallowed_src_ip>[a-z0-9.:]+)\) (?<msg2>[^0-9]+) (?<peer>[0-9]+) \(\[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)
FORMAT = action::blocked status::error class::invalid

[receive_packet_invalid]
# receive.c:423: net_dbg_ratelimited("%s: Packet is neither ipv4 nor ipv6 from peer %llu (%pISpfsc)\n",
# receive.c:429: net_dbg_ratelimited("%s: Packet has incorrect size from peer %llu (%pISpfsc)\n",
# Nov 3 10:21:39 ipfyx kernel: [169517.575746] wireguard: wg0: Packet is neither ipv4 nor ipv6 from peer 5 (127.0.0.1:45361)
# Nov 3 10:31:23 ipfyx kernel: [170101.697697] wireguard: wg0: Packet is neither ipv4 nor ipv6 from peer 19 ([fe80::1]:49418)
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Packet[A-Za-z0-9 ]+) (?<peer>[0-9]+) \(\[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)
FORMAT = action::blocked status::error class::invalid

[receive_invalid_nonce]
# receive.c:463: net_dbg_ratelimited("%s: Packet has invalid nonce %llu (max %llu)\n",
# Oct 23 20:46:45 ipfyx kernel: [6325623.901805] wireguard: wg0: Packet has invalid nonce 493 (max 497)
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Packet has invalid nonce) (?<nonce>[0-9]+)[^[0-9]+(?<max_nonce>[0-9]+)
FORMAT = action::blocked status::error class::invalid

[receive_dropping_handshake]
# receive.c:563: net_dbg_skb_ratelimited("%s: Dropping handshake packet from %pISpfsc\n",
# Oct 23 20:46:45 ipfyx kernel: [6325623.901805] wireguard: wg0: Dropping handshake packet from 127.0.0.1:1234
# Oct 23 20:46:45 ipfyx kernel: [6325623.901805] wireguard: wg0: Dropping handshake packet from [fe80::1]:1234
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>[A-Za-z ]+from) \[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)
FORMAT = action::blocked status::error class::handshake

### send.c ###

[send_handshake]
# send.c:30: net_dbg_ratelimited("%s: Sending handshake initiation to peer %llu (%pISpfsc)\n",
# send.c:90: net_dbg_ratelimited("%s: Sending handshake response to peer %llu (%pISpfsc)\n",
# send.c:234: net_dbg_ratelimited("%s: Sending keepalive packet to peer %llu (%pISpfsc)\n",
# Nov 2 00:22:11 ipfyx kernel: [47150.899940] wireguard: wg0: Sending handshake response to peer 3 (127.0.0.1:40343)
# Nov 2 00:22:11 ipfyx kernel: [47150.899940] wireguard: wg0: Sending handshake response to peer 3 ([::1]:40343)
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Sending[A-Za-z0-9 ]+) (?<peer>[0-9]+) \(\[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)
FORMAT = action::allowed status::started class::handshake

[send_denied_handshake]
# send.c:116: net_dbg_skb_ratelimited("%s: Sending cookie response for denied handshake message for %pISpfsc\n",
# Nov 2 00:22:11 ipfyx kernel: [47150.899940] wireguard: wg0: Sending cookie response for denied handshake message for 127.0.0.1:1234
# Nov 2 00:22:11 ipfyx kernel: [47150.899940] wireguard: wg0: Sending cookie response for denied handshake message for [::1]:1234
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Sending cookie[A-Za-z ]+) \[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)
FORMAT = action::blocked status::started class::cookie

### socket.c ###

[socket_no_route]
# socket.c:76: net_dbg_ratelimited("%s: No route to %pISpfsc, error %d\n",
# socket.c:143: net_dbg_ratelimited("%s: No route to %pISpfsc, error %d\n",
# Nov 2 00:22:11 ipfyx kernel: [47150.899940] wireguard: wg0: No route to 127.0.0.1, error 12
REGEX = ^(?<msg>No route[A-Za-z ]+) \[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)(?:\/0%0)?, error (?<error_code>[0-9]+)
FORMAT = action::blocked status::error class::invalid

### peers.c ###

[peer_created]
# peer.c:63: pr_debug("%s: Peer %llu created\n", wg->dev->name, peer->internal_id);
# Nov 2 00:22:11 ipfyx kernel: [47150.899940] wireguard: wg0: Peer 12 created
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Peer) (?<peer>[0-9]+) (?<msg2>created)
FORMAT = action::allowed status::created class::peer

[peer_destroyed]
# peer.c:204: pr_debug("%s: Peer %llu (%pISpfsc) destroyed\n",
# Nov 2 00:22:11 ipfyx kernel: [47150.899940] wireguard: wg0: Peer 12 (127.0.0.1) destroyed
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Peer) (?<peer>[0-9]+) \((?<src_ip>[a-z0-9.:]+)(?:\/0%0)?\) (?<msg2>destroyed)
FORMAT = action::allowed status::destroyed class::peer

### timers.c ###

[timers_handshake_incomplete_retry]
# timers.c:65: pr_debug("%s: Handshake for peer %llu (%pISpfsc) did not complete after %d seconds, retrying (try %d)\n",
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Handshake for peer) (?<peer>[0-9]+) \(\[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)(?:\/0%0)?\) (?<msg2>[^$]+)
FORMAT = action::allowed status::stopped class::handshake

[timers_handshake_max_attempt]
# timers.c:47: pr_debug("%s: Handshake for peer %llu (%pISpfsc) did not complete after %d attempts, giving up\n",
# Nov 1 22:46:50 ipfyx kernel: [41429.934023] wireguard: wg0: Handshake for peer 5 (127.0.0.1:45361) did not complete after 6 attempts, giving up
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>Handshake for peer) (?<peer>[0-9]+) \(\[?(?<src_ip>[a-z0-9.:]+)\]?:(?<src_port>[0-9]+)(?:\/0%0)?\) (?<msg2>[^$]+)
FORMAT = action::allowed status::stopped class::handshake

[timers_retrying_handshake]
# timers.c:95: pr_debug("%s: Retrying handshake with peer %llu (%pISpfsc) because we stopped hearing back after %d seconds\n",
# timers.c:128: pr_debug("%s: Zeroing out all keys for peer %llu (%pISpfsc), since we haven't received a new one in %d seconds\n",
# Nov 1 22:38:52 ipfyx kernel: [40951.988723] wireguard: wg0: Retrying handshake with peer 5 ([fe80::1]:45361) because we stopped hearing back after 15 seconds
# Nov 1 22:38:52 ipfyx kernel: [40951.988723] wireguard: wg0: Retrying handshake with peer 5 (127.0.0.1:45361) because we stopped hearing back after 15 seconds
# Nov 1 19:43:46 ipfyx kernel: [30446.408137] wireguard: wg0: Zeroing out all keys for peer 4 (127.0.0.1:58860), since we haven't received a new one in 540 seconds
SOURCE_KEY  = wg_data
REGEX = ^(?<msg>[A-Za-z ]+) (?<peer>[0-9]+) \(\[?(?<src_ip>[a-z0-9:.]+)\]?:(?<src_port>[0-9]+)(?:\/0%0)?\),? (?<msg2>[^$]+)
FORMAT = action::allowed status::stopped class::handshake

## virtio_net.c

[wg_virtio_net-too-much-data]
# "%s: too much data\n", skb->dev->name
REGEX = wireguard:\s(?<device>[^:]+):\stoo\smuch\sdata
FORMAT = action::fail class::network level::ERROR

[wg_virtio_net-short-packet]
# "%s: short packet %i\n", dev->name, len
REGEX = wireguard:\s(?<device>[^:]+):\sshort\spacket
FORMAT = action::fail class::network level::ERROR
